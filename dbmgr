#!/usr/bin/env php
<?php

$GLOBALS["BOLDGREEN"] = "\x1b[1m\x1b[32m";
$GLOBALS["WHITE"] = "\x1b[97m";
$GLOBALS["BOLDWHITE"] = "\x1b[1m\x1b[97m";
$GLOBALS["BOLDCYAN"] = "\x1b[1m\x1b[36m";
$GLOBALS["CYAN"] = "\x1b[36m";
$GLOBALS["RED"] = "\033[31m";
$GLOBALS["BOLDRED"] = "\x1b[1m\x1b[31m";
$GLOBALS["BLUE"] = "\x1b[34m";


$GLOBALS["RESET"] = "\x1b[0m";

function show_help(array $argv) {
    echo <<< EOL
    Database management tool

    {$GLOBALS["BOLDGREEN"]}Usage: {$GLOBALS["BOLDCYAN"]}$argv[0] [OPTIONS] [FILE] 

    {$GLOBALS["BOLDGREEN"]}Options: 
        {$GLOBALS["BOLDCYAN"]}-r{$GLOBALS["WHITE"]},{$GLOBALS["BOLDCYAN"]}--remove   <INPUT_JSON>        {$GLOBALS["WHITE"]}JSON to database (replace) 
        {$GLOBALS["BOLDCYAN"]}-a{$GLOBALS["WHITE"]},{$GLOBALS["BOLDCYAN"]}--add      <INPUT_JSON>        {$GLOBALS["WHITE"]}JSON to database (add)
        {$GLOBALS["BOLDCYAN"]}-x{$GLOBALS["WHITE"]},{$GLOBALS["BOLDCYAN"]}--export   <OUTPUT_JSON>       {$GLOBALS["WHITE"]}Database to JSON
        {$GLOBALS["BOLDCYAN"]}-ct{$GLOBALS["WHITE"]},{$GLOBALS["BOLDCYAN"]}--clear-table   <TABLE>       {$GLOBALS["WHITE"]}Delete all records of one table    
        {$GLOBALS["BOLDCYAN"]}-dd{$GLOBALS["WHITE"]},{$GLOBALS["BOLDCYAN"]}--drop-database               {$GLOBALS["WHITE"]}Drop the database 
        {$GLOBALS["BOLDCYAN"]}-m{$GLOBALS["WHITE"]},{$GLOBALS["BOLDCYAN"]}--migrate                      {$GLOBALS["WHITE"]}Migrate & Seed the database with Laravel artisan     

    EOL;
   
   die;
}

function error($argv, $table = false) {
    $filename = __FILE__;
    $padding = str_repeat(" ", strlen($argv[0] . $argv[1]));

    if(!$table) {
        $str1 = "Missing JSON file after {$argv[1]} option";
        $str2 = "Missing filename here";
    } else {
        $str1 = "Missing table name file after {$argv[1]} option";
        $str2 = "Missing table name here";
    }


    echo <<< EOL
    {$GLOBALS["BOLDRED"]}error[418]{$GLOBALS["WHITE"]}: $str1
    {$GLOBALS["BLUE"]} --> {$GLOBALS["WHITE"]}{$filename}
    {$GLOBALS["BLUE"]}  |
    {$GLOBALS["BLUE"]}  |    {$argv[0]} {$argv[1]}
    {$GLOBALS["BLUE"]}  |    {$padding}{$GLOBALS["BOLDRED"]}  ^ $str2

    {$GLOBALS["BOLDRED"]}error{$GLOBALS["WHITE"]}: could not run the file due to previous error 

    EOL;
    die;
}




if(!isset($argv[1])) {
    show_help($argv);
}

$servername = "mysql";
$username = "root";
$password = "root";
$dbname = "sae23";

try {
    $conn = new mysqli($servername, $username, $password, $dbname);
} catch(Exception $e) {
    if(!(isset($argv[1]) && ($argv[1] === "-m" || $argv[1] === "--migrate"))) {
        echo $GLOBALS["BOLDRED"] . "[!] " . $GLOBALS["WHITE"] . $e;
        die; 
    }
}


if (isset($conn) && $conn -> connect_error) {
    die("Connection failed: " . $conn -> connect_error);
}




switch ($argv[1]) {
    case "-h":
    case "--help":
        show_help($argv);
        break;

    case "-r":
        if(!isset($argv[2])) {
            error($argv);
        }

        $json_file = $argv[2];
        $jsonData = file_get_contents($json_file);
        $array = json_decode($jsonData, true);

        $tables = [
            "deplacements",
            "emploidutemps",
            "equipages",
            "lieus",
            "personal_access_tokens",
            "rejoints",
            "utilisateurs",
            "vehicules",
        ];

        foreach($tables as $table) {
            $sql = "DELETE FROM $table";
            if ($conn -> query($sql) !== true) {
                echo "Error: " . $sql . "<br>" . $conn -> error;
            }
        }

        foreach ($array as $tableName => $tableRows) {
            foreach ($tableRows as $row) {
                $columns = implode(", ", array_keys($row));
                $values = "'" . implode("', '", array_values($row)) . "'";
                $values = str_replace("''", "null", $values);
                $sql = "INSERT INTO $tableName ($columns) VALUES ($values)";

                if ($conn -> query($sql) !== true) {
                    echo "Error: " . $sql . "<br>" . $conn->error;
                }
            }
        }

        echo $GLOBALS["BOLDCYAN"] . "[+]"  . $GLOBALS["BOLDWHITE"] . " Data import successfully";
        $conn -> close();
        break;

    case "-a":
    case "--add":
        if(!isset($argv[2])) {
             error($argv);
        }
     
        $json_file = $argv[2];
        $jsonData = file_get_contents($json_file);
        $array = json_decode($jsonData, true);

        foreach ($array as $tableName => $tableRows) {
            foreach ($tableRows as $row) {
                $columns = implode(", ", array_keys($row));
                $values = "'" . implode("', '", array_values($row)) . "'";
                $sql = "INSERT INTO $tableName ($columns) VALUES ($values)";

                if ($conn->query($sql) !== true) {
                    echo "Error: " . $sql . "<br>" . $conn->error;
                }
            }
        }

        echo $GLOBALS["BOLDCYAN"] . "[+]"  . $GLOBALS["BOLDWHITE"] . " Data import successfully";
        $conn -> close();
        break;


    case "-x":
    case "--export":
        if(!isset($argv[2])) {
            error($argv);
        }

        $tables = [
            "deplacements",
            "emploidutemps",
            "equipages",
            "lieus",
            "personal_access_tokens",
            "rejoints",
            "utilisateurs",
            "vehicules",
        ];

        $data = [];

        foreach ($tables as $table) {
            $sql = "SELECT * FROM $table";
            $result = $conn->query($sql);

            if ($result->num_rows > 0) {
                while ($row = $result->fetch_assoc()) {
                    $data[$table][] = $row;
                }
            }
        }

        $jsonData = json_encode($data, JSON_PRETTY_PRINT);

        file_put_contents($argv[2], $jsonData);
        $conn -> close();

        echo $GLOBALS["BOLDCYAN"] . "[+]"  . $GLOBALS["BOLDWHITE"] . " Data exported successfully";

        break;

    case "-ct":
    case "--clear-table":
        if(!isset($argv[2])) {
            error($argv, true);
        }

        $sql = "DELETE FROM {$argv[2]}";
        $result = $conn -> query($sql);

        $conn -> close();

        echo $GLOBALS["BOLDCYAN"] . "[+]"  . $GLOBALS["BOLDWHITE"] . " Table cleared successfully";

        break;

    case "-dd":
    case "--drop-database":
        echo $GLOBALS["WHITE"] . "VOUS ALLEZ SUPPRIMER LA BASE DE DONNÃ‰E \n";
        echo $GLOBALS["BOLDRED"] . "En etes vous sur ? (y/n) ";
        $res = fgets(STDIN);

        if(trim($res) === "y") {
            $sql = "DROP DATABASE sae23;";
            $result = $conn -> query($sql);
            echo $GLOBALS["BOLDCYAN"] . "[+]"  . $GLOBALS["BOLDWHITE"] . " Database dropped";
        }

        break;

    case "-m":
    case "--migrate":
        shell_exec("php artisan migrate --force --seed");
        echo $GLOBALS["BOLDCYAN"] . "[+]"  . $GLOBALS["BOLDWHITE"] . " Migrated & Seeded database";
        break;
}

